"""
This type stub file was generated by pyright.
"""

from shapely.geometry.base import BaseGeometry

"""Points and related utilities
"""
__all__ = ["Point"]
class Point(BaseGeometry):
    """
    A geometry type that represents a single coordinate with
    x,y and possibly z values.

    A point is a zero-dimensional feature and has zero length and zero area.

    Parameters
    ----------
    args : float, or sequence of floats
        The coordinates can either be passed as a single parameter, or as
        individual float values using multiple parameters:

        1) 1 parameter: a sequence or array-like of with 2 or 3 values.
        2) 2 or 3 parameters (float): x, y, and possibly z.

    Attributes
    ----------
    x, y, z : float
        Coordinate values

    Examples
    --------
    Constructing the Point using separate parameters for x and y:

    >>> p = Point(1.0, -1.0)

    Constructing the Point using a list of x, y coordinates:

    >>> p = Point([1.0, -1.0])
    >>> print(p)
    POINT (1 -1)
    >>> p.y
    -1.0
    >>> p.x
    1.0
    """
    __slots__ = ...
    def __new__(self, *args): # -> Point:
        ...
    
    @property
    def x(self):
        """Return x coordinate."""
        ...
    
    @property
    def y(self):
        """Return y coordinate."""
        ...
    
    @property
    def z(self):
        """Return z coordinate."""
        ...
    
    @property
    def __geo_interface__(self): # -> dict[str, str | tuple[Unknown, ...] | list[Unknown]]:
        ...
    
    def svg(self, scale_factor=..., fill_color=..., opacity=...): # -> str:
        """Returns SVG circle element for the Point geometry.

        Parameters
        ==========
        scale_factor : float
            Multiplication factor for the SVG circle diameter.  Default is 1.
        fill_color : str, optional
            Hex string for fill color. Default is to use "#66cc99" if
            geometry is valid, and "#ff3333" if invalid.
        opacity : float
            Float number between 0 and 1 for color opacity. Default value is 0.6
        """
        ...
    
    @property
    def xy(self): # -> tuple[array[float], array[float]]:
        """Separate arrays of X and Y coordinate values

        Example:
          >>> x, y = Point(0, 0).xy
          >>> list(x)
          [0.0]
          >>> list(y)
          [0.0]
        """
        ...
    


