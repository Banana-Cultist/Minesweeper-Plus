"""
This type stub file was generated by pyright.
"""

from shapely.geometry.base import BaseMultipartGeometry

"""Collections of points and related utilities
"""
__all__ = ["MultiPoint"]
class MultiPoint(BaseMultipartGeometry):
    """
    A collection of one or more Points.

    A MultiPoint has zero area and zero length.

    Parameters
    ----------
    points : sequence
        A sequence of Points, or a sequence of (x, y [,z]) numeric coordinate
        pairs or triples, or an array-like of shape (N, 2) or (N, 3).

    Attributes
    ----------
    geoms : sequence
        A sequence of Points

    Examples
    --------
    Construct a MultiPoint containing two Points

    >>> from shapely import Point
    >>> ob = MultiPoint([[0.0, 0.0], [1.0, 2.0]])
    >>> len(ob.geoms)
    2
    >>> type(ob.geoms[0]) == Point
    True
    """
    __slots__ = ...
    def __new__(self, points=...): # -> MultiPoint:
        ...
    
    @property
    def __geo_interface__(self): # -> dict[str, str | tuple[Unknown, ...]]:
        ...
    
    def svg(self, scale_factor=..., fill_color=..., opacity=...): # -> LiteralString | Literal['<g />']:
        """Returns a group of SVG circle elements for the MultiPoint geometry.

        Parameters
        ==========
        scale_factor : float
            Multiplication factor for the SVG circle diameters.  Default is 1.
        fill_color : str, optional
            Hex string for fill color. Default is to use "#66cc99" if
            geometry is valid, and "#ff3333" if invalid.
        opacity : float
            Float number between 0 and 1 for color opacity. Default value is 0.6
        """
        ...
    


